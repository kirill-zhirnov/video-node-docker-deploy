map $http_upgrade $connection_upgrade {
		default upgrade;
		""      close;
}

map $remote_addr $proxy_forwarded_elem {

		# IPv4 addresses can be sent as-is
		~^[0-9.]+$        "for=$remote_addr";

		# IPv6 addresses need to be bracketed and quoted
		~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";

		# Unix domain socket names cannot be represented in RFC 7239 syntax
		default           "for=unknown";
}

map $http_forwarded $proxy_add_forwarded {
    # If the incoming Forwarded header is syntactically valid, append to it
    "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

    #Otherwise, replace it
    default "$proxy_forwarded_elem";
}

upstream node_fun_servers {
	server DOCKER_NGINX_NODE_HOST-1:3000;
	server DOCKER_NGINX_NODE_HOST-2:3000;
}

server {
	listen       80;
	listen  [::]:80;
	server_name  localhost;

	index index.html index.htm index.php;
	charset utf-8;

	location / {
		proxy_pass http://node_fun_servers;

		proxy_http_version                 1.1;
		proxy_cache_bypass                 $http_upgrade;

		# Proxy headers
		proxy_set_header Upgrade           $http_upgrade;
		proxy_set_header Connection        $connection_upgrade;
		proxy_set_header Host              $host;
		proxy_set_header X-Real-IP         $remote_addr;
		proxy_set_header Forwarded         $proxy_add_forwarded;
		proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Host  $host;
		proxy_set_header X-Forwarded-Port  $server_port;

		# Proxy timeouts
		proxy_connect_timeout              60s;
		proxy_send_timeout                 60s;
		proxy_read_timeout                 60s;
	}

	error_page   500 502 503 504  /50x.html;
	location = /50x.html {
			root   /usr/share/nginx/html;
	}
}

